#!/usr/bin/python3
import os,sys,socket,signal,platform,requests,urllib3,signal
if platform.system().upper()=="LINUX":
    sys.path.append("/etc/ClassAdmin")
elif platform.system().upper()=="WINDOWS":
    sys.path.append("C:\\Program Files\\ClassAdmin")
from sources.handlerSignals import Handler
from sources import Environment, getIpAddress
from sources import logFile
urllib3.disable_warnings()
PORT = requests.get("https://localhost/api/server/port",headers={
    "password":",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS(",
    "otp":",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS("
},cert=(f"{Environment.pathSSL('crt')}",f"{Environment.pathSSL('key')}")).json()["result"][0]["port"]

print(os.getpid())
try:
    Handler()
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.bind(("",PORT))
    sock.listen()
    requests.put("https://localhost/api/server?id=1", headers={
        "Content-Type": "application/x-www-form-urlencoded",
        "password": ",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS(",
        "otp": ",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS("
    }, data=f"address={getIpAddress()}&status=CONNECTED",cert=(f"{Environment.pathSSL('crt')}", f"{Environment.pathSSL('key')}"))

    print(logFile().message("running ClassAdmin server...",True,"INFO"))
    connection,address = sock.accept()
except (KeyboardInterrupt,SystemExit) as err:
        print(logFile().message("shutdown ClassAdmin server...", True, "INFO"))
        requests.put("https://localhost/api/server?id=1", headers={
            "Content-Type": "application/x-www-form-urlencoded",
            "password": ",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS(",
            "otp": ",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS("
        }, data=f"status=DISCONNECTED")
except BaseException as err:
        print(logFile().message(f"{err}",True,"ERROR"))
        requests.put("https://localhost/api/server?id=1",headers={
            "Content-Type": "application/x-www-form-urlencoded",
            "password": ",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS(",
            "otp": ",UPsz)ZfF~ZOh^:YH)o[4P<sF7$jS("
        },data=f"status=ERROR")
finally:
    try:
        sock.close()
    except:
        None